name: Test/Deploy Master

on:
 push:
   branches: [ master ]

jobs:
 build-test:
   runs-on: ubuntu-latest
   strategy:
     matrix:
       node-version: [18.x]
   steps:
   - uses: actions/checkout@v2
   - name: Use Node.js ${{ matrix.node-version }}
     uses: actions/setup-node@v1
     with:
       node-version: ${{ matrix.node-version }}
   - name: Creating Neo4j Container
     run: |
        chmod +x ./scripts/docker-neo4j-initializer/docker-neo4j.sh
        ./scripts/docker-neo4j-initializer/docker-neo4j.sh
        sleep 30s
        chmod +x ./scripts/docker-neo4j-initializer/start-movies-db.sh
        ./scripts/docker-neo4j-initializer/start-movies-db.sh
   - run: rm -rf docs
   - run: yarn install
   - name: Eslint check
     run: yarn run lint
   - name: Cypress run
     uses: cypress-io/github-action@v2
     with:
        build: yarn run build
        start: yarn run dev
        wait-on: 'http://localhost:3000'
 build-docker:
   needs: build-test
   runs-on: ubuntu-latest
   strategy:
     matrix:
       node-version: [18.x]
   steps:
   - name: run Docker 
     uses: actions/checkout@v2
   - run: rm -rf docs
   - name: Login to Docker Hub
     uses: docker/login-action@v1
     with:
       username: ${{ secrets.DOCKER_HUB_USERNAME }}
       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v1
   - name: Build and push
     uses: docker/build-push-action@v2
     with:
      context: .
      file: ./Dockerfile
      push: true
      tags: ${{ secrets.DOCKER_HUB_USERNAME }}/neodash:latest
